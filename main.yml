---
- hosts: aci
  connection: local
  gather_facts: False

  vars:
    apic_info: &apic_info
      host:           "{{ aci_host }}"
      user:           "{{ aci_user }}"
      password:       "{{ aci_password }}"
      validate_certs: "{{ aci_valid_cert }}" 
      use_ssl:        "{{ aci_use_ssl }}" 

  tasks:
    - name: "1] API Request - Collect System Fault Overview"
      aci_rest:
        <<: *apic_info
        path:   "/api/node/class/faultSummary.json?query-target-filter=or(eq(faultSummary.severity,\"critical\"),eq(faultSummary.severity,\"major\"))&order-by=faultSummary.severity|desc"
        method: get
      register: faults_system
    
    - name: "2] (OPTIONAL) Export data to JSON file"
      copy:
        content: "{{ faults_system | to_nice_json}}"
        dest:    "./faults_system.json"

    - name: "3] Add variable - Message Title"
      set_fact:
        add_title: "ACI Fault Report"

    - name: "4] Convert Data to Markdown format"
      template: 
        src:  "template/faults_report.j2"
        dest: "faults_report.md"

    - name: "5] Read data sending to Webex"
      debug:    msg="{{lookup('file', 'faults_report.md') }}"
      register: faults_report
      no_log:   yes 

    - name: "6] Send Webex Notification"
      cisco_spark:
        recipient_type: roomId
        recipient_id:   "{{ roomID }}"
        message_type:   markdown
        personal_token: "{{ bot_token }}"
        message:        "{{ faults_report.msg }}"
